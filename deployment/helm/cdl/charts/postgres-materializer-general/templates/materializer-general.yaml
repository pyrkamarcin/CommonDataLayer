apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-materializer-general
  labels:
    app: {{ .Release.Name }}-postgres-materializer-general
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres-materializer-general
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres-materializer-general
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51805'
        prometheus.io/path: '/metrics'
    spec:
      containers:
        - name: cdl-postgres-materializer-general
          image: "{{ .Values.global.imageRepositoryPath }}cdl-materializer-general:{{ .Values.global.imageVersion }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          command: ["/bin/materializer-general"]
          env:
            - name: MATERIALIZER_GENERAL_MATERIALIZATION_DB
              value: "postgres"
            - name: MATERIALIZER_GENERAL_SERVICES__SCHEMA_REGISTRY_URL
              value: "http://{{ .Release.Name }}-schema-registry:6400"
            - name: MATERIALIZER_GENERAL_POSTGRES__USERNAME
              value: {{ .Values.postgresUsername }}
            - name: MATERIALIZER_GENERAL_POSTGRES__PASSWORD
              value: {{ .Values.postgresPassword }}
            - name: MATERIALIZER_GENERAL_POSTGRES__HOST
              value: {{ .Values.postgresHost }}
            - name: MATERIALIZER_GENERAL_POSTGRES__PORT
              value: "{{ .Values.postgresPort }}"
            - name: MATERIALIZER_GENERAL_POSTGRES__DBNAME
              value: {{ .Values.postgresDbname }}
            - name: MATERIALIZER_GENERAL_POSTGRES__SCHEMA
              value: {{ .Values.postgresSchema }}
            - name: MATERIALIZER_GENERAL_INPUT_PORT
              value: "6400"
            - name: MATERIALIZER_GENERAL_CACHE_CAPACITY
              value: "500"
            - name: MATERIALIZER_GENERAL_LOG__RUST_LOG
              value: "info,materializer_general=trace"
            - name: MATERIALIZER_GENERAL_MONITORING__OTEL_SERVICE_NAME
              value: "postgres-materializer"
            - name: OTEL_EXPORTER_JAEGER_AGENT_HOST
              value: {{ .Values.global.jaegerAgentHost }}
            - name: OTEL_EXPORTER_JAEGER_AGENT_PORT
              value: "{{ .Values.global.jaegerAgentPort }}"
          ports:
            - containerPort: 51805
      imagePullSecrets:
        - name: {{ .Values.global.cdlImagePullSecrets }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres-materializer-general
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-postgres-materializer-general
  ports:
    - port: 6400
      targetPort: 6400
