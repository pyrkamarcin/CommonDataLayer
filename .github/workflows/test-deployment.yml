name: Deployment Test

on:
  push:
    branches:
      - "develop"
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "rust-toolchain"
      - "deployment/helm"
      - "build.sh"
      - "Dockerfile"
      - ".dockerignore"
      - "rust-toolchain"
      - "CDL.Tests/**"
      - "**/*.sql"
  pull_request:
    paths:
      - "**/*.rs"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
      - "rust-toolchain"
      - "deployment/helm"
      - "build.sh"
      - "Dockerfile"
      - ".dockerignore"
      - "rust-toolchain"
      - "CDL.Tests/**"
      - "**/*.sql"

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  DOCKER_BUILDKIT: 1
  ENV: CI

jobs:
jobs:
  checkpoint:
    runs-on: ubuntu-latest
    name: Check if job prerequisites are valid
    outputs:
      decision: ${{ steps.decision.outputs.value }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 32

      - id: decision
        run: |
          echo "commit file list:"
          if git --no-pager diff --name-only HEAD~1 | grep -v .sh | grep -v .md
          then
            echo "it looks like a valid commit, enabling the tests"
            echo "::set-output name=value::true"
          else
            echo "This does not look like the testable commit"
            echo "::set-output name=value::false"
          fi

  deployment-test:
    name: Test Deployment
    needs: checkpoint
    runs-on: ubuntu-latest
    if: ${{ needs.checkpoint.outputs.decision == 'true' }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: install k8s
        run: |
          curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 INSTALL_K3S_VERSION=v1.21.4+k3s1 sh -s - --docker
          cat /etc/rancher/k3s/k3s.yaml
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
      - name: deploy infrastructure
        run: helm install --values ./deployment/helm/infrastructure/values.yaml infrastructure ./deployment/helm/infrastructure
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m")"
      - name: Cache cargo directories
        uses: actions/cache@v2.1.6
        id: cache
        with:
          path: |
            ./cache_img
          key: ${{ runner.os }}-docker-${{ steps.get-date.outputs.date }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-docker-${{ steps.get-date.outputs.date }}-
      - name: Import cache image
        run: |
          docker load -i cache_img
          docker tag $(docker images | awk '{print $3}'  | awk 'NR==2') local/cache
        continue-on-error: true
      - name: Restore cache
        run: DOCKER_BUILDKIT=1 docker build --no-cache --target cache-import .
        continue-on-error: true
      - name: build cdl images
        run: ./build.sh
      - name: clean kafka provisioning
        run: kubectl delete job infrastructure-kafka-provisioning
      - name: deploy cdl kafka
        run: helm install --values ./deployment/helm/cdl/values-local.yaml cdl ./deployment/helm/cdl
      - name: wait
        run: sleep 60
      - name: check if pods are running
        run: |
          kubectl get pods
          [[ -z `kubectl get pods -o=jsonpath="{.items[?(.status.containerStatuses[0].started==false)]['metadata.name']}"` ]]
      - name: logging support for k8s
        if: ${{ failure() }}
        run: |
          kubectl get pods -o=jsonpath="{.items[?(.status.containerStatuses[0].started==false)]['metadata.name']}" | xargs -n 1 -t  kubectl logs
          kubectl get pods -o=jsonpath="{.items[?(.status.containerStatuses[0].started==false)]['metadata.name']}" | xargs -n 1 -t  kubectl describe pod
      - name: e2e tests
        run: |
          ./e2e/test.sh
          kubectl delete pod cdl-e2e
      - name: tests
        run: |
          ./CDL.Tests/test.sh
          kubectl delete pod cdl-tests
      - name: uninstall cdl kafka
        run: helm uninstall cdl
      - name: wait
        run: sleep 30

      - name: depoly cdl rabbitmq
        run: helm install --values ./deployment/helm/cdl/values-local.yaml --set global.communicationMethod=amqp cdl ./deployment/helm/cdl
      - name: wait
        run: sleep 60
      - name: check if pods are running
        run: |
          kubectl get pods
          [[ -z `kubectl get pods -o=jsonpath="{.items[?(.status.containerStatuses[0].started==false)]['metadata.name']}"` ]]
      - name: uninstall cdl rabbitmq
        run: helm uninstall cdl
      - name: Build cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          DOCKER_BUILDKIT=1 docker build -t local/cache --no-cache --target cache-export .
          docker save local/cache:latest > cache_img
